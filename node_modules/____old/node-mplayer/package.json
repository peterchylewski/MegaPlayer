{
  "name": "node-mplayer",
  "version": "0.0.3",
  "description": "Node.js wrapper for mplayer on linux.",
  "main": "./lib/node-mplayer.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/loics2/node-mplayer.git"
  },
  "keywords": [
    "mplayer",
    "wrapper"
  ],
  "author": {
    "name": "Lo√Øc Stankovic"
  },
  "license": "MIT",
  "readme": "node-mplayer\n============\n\nA node.js wrapper for MPlayer on Linux. It's currently focused on sound playing, more options and video playing will come later.\n\n##Usage\n\nFirst, install the module with (assuming you already installed MPlayer)\n\n\tnpm install node-mplayer\n\nThen, you need to make a new instance of the module. The constructor of the module can take the path of the file to play. \n\n\tvar Mplayer = require('node-mplayer'); \n    \n\tvar player1 = new Mplayer('/home/node/Music/Kalimba.mp3');\n    var player2 = new Mplayer();\n    \n##Available methods\n\n###play\n\nThis method will play the file defined when the player object was instanciated or setted with `setFile()`. This method MUST be called before any other. \nIt can take in parameter an object that contains the volume and the number of times to play the file (see `setVolume` and `setLoop`).\n\n\tplayer.play();\n    player.play({volume: 50});\n    player.play({volume: 50,\n    \t\t\tloop: 10});\n\n###stop\n\nThis method will stop the played file. \n\n\tplayer.stop();\n    \n###pause\n\nThis one will toggle pause.\n\n\tplayer.pause();\n    \n###mute\n\nThe method to toggle mute\n\n\tplayer.mute();\n    \n###setVolume\n\nThis method is used to set the volume. It takes one parameter, the volume value that can go from 1 to 100.\n\n\tplayer.setVolume(52);    //will set the volume to 52%\n\n###seek\n\nThis method is used to navigate in the playing file. It take one parameter, the seek value in seconds that goes from 0 to the end of the file. This value is absolute.\n\n\tplayer.seek(50);    //will go to 50 seconds\n\n###setLoop\n\nThis will set the number of times to replay the file. The parameter is the number of times, -1 is forever.\n\n\tplayer.setLoop(20);    //will play the file 20 times\n    \n###setSpeed\n\nThis will set the playing speed. It takes one parameter, the speed. 1 is the default speed.\n\n\tplayer.setSpeed(0.5);    //will play the file 0.5x slower\n    player.setSpeed(20);    //will play the file 20x faster\n    \n###setFile\n\nThis one is used to set the file to play. The changes will take effect after calling the `play()` method. It takes the path of the file in parameter.\n\n\tplayer.setFile('/home/node/Music/asdf.mp3');\n\n###getTimeLength\n\nReturns the length of the file in seconds. It needs a callback.\n\n\tplayer.getTimeLength(function(length){\n    \tconsole.log(length);\n    });\n\n###getTimePosition\n\nReturns the elapsed play time in seconds. It needs a callback.\n\n\tplayer.getTimePosition(function(elapsedTime){\n    \tconsole.log(elapsedTime);\n    });\n\n##Events\n\n###end\n\nThe end event is emitted when the file has ended.\n\n###error\n\nThe error event is emitted when an error has ocurred.\n\n##Stability\n\nThis module uses the [`readline`](http://www.nodejs.org/api/readline.html) module, which is currently marked unstable. \n\nThis module has been tested on Ubuntu 14.04 LTS with MPlayer 1.1-4.8.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "_id": "node-mplayer@0.0.3",
  "dist": {
    "shasum": "d117f164688543490cfd9751d9acd00f9c6849a4"
  },
  "_from": "node-mplayer@",
  "_resolved": "https://registry.npmjs.org/node-mplayer/-/node-mplayer-0.0.3.tgz"
}

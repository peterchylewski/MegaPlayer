'use strict';

var fs = require('fs'),
    path = require('path'),
	_ = require('underscore'),
	moment = require('moment');

// http://stackoverflow.com/questions/11194287/convert-a-directory-structure-in-the-filesystem-to-json-with-node-js

function dirTree(filename) {
	//console.log('dirTree', filename);
    var stats = fs.lstatSync(filename),
        info = {
            path: path.resolve(global._root, filename),
            name: path.basename(filename),
			birthtime: stats.birthtime,
			atime: stats.atime,
			ctime: stats.ctime,
			mtime: stats.mtime
        };

	//console.log('stats', stats);	
	
    if (stats.isDirectory() === true) {
        info.type = 'folder';
        info.children = fs.readdirSync(filename).map(function(child) {
	
			//console.log('filename', filename);
			//return dirTree(filename + '/' + child);
			
			//console.log(path.resolve(filename, child));
			return dirTree(path.resolve(filename, child));
			
            
        });
    } else {
        // Assuming it's a file. In real life it could be a symlink or
        // something else!
        info.type = 'file';
		info.extension = path.extname(filename).replace(/^\./, '');
    }
    return info;
}


module.exports.walk = function(dir) {
	console.log('walk');
	
	$('#main').html('gathering file treeâ€¦');
	
	var startTime = window.performance.now();
	
	//var util = require('util');
	//console.log(util.inspect(dirTree('.'), false, null));
	
	var tree = dirTree(dir);
	
	console.log(window.performance.now() - startTime);
	
	var pathToTemplate = path.resolve(__dirname, './templates/FileTree.tmpl.html'),
		templateHTML = fs.readFileSync(pathToTemplate, 'utf8'),
		template = _.template(templateHTML);
	
	var partial = function(depth, obj) {
		depth = depth + 1;
		return template({tree: obj, depth: depth, partial: partial, moment: moment});
	};
	
	//var html = template({tree: tree, partial: partial});
	
	
	$('#main').html(partial(-1, tree));
	
	//$('#main .fileTree')
	
	
	//  ------------------------------ add events
	
	// toggle folders
	$('#main .fileTree').find('.folder > .title').on('dblclick', function() {
		console.log('folder klik');
		
		var $folder = $(this).parent(),
			$glyphicon = $folder.find('.glyphicon:first');
	
		$folder.data('isExpanded', $folder.data('isExpanded') !== undefined ? !$folder.data('isExpanded') : true);
		
		if ($folder.data('isExpanded') === false) {
			$glyphicon
				.removeClass('glyphicon-folder-close')
				.addClass('glyphicon-folder-open');
		} else {
			$glyphicon
				.removeClass('glyphicon-folder-open')
				.addClass('glyphicon-folder-close');
		}
		$folder.parent().find('.fileTree').toggle();
		//$folder.parent().find('.fileTree').toggle();
	});
	
	$('#main').find('.file').on('dblclick', function() {
		console.log('dblclick', $(this).attr('title'));
	});
}
